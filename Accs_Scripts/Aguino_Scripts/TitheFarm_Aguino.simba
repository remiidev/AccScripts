{$IFNDEF SCRIPT_CHAIN}
  {$DEFINE SRL_USE_REMOTEINPUT}
  {$I SRL-T/osr.simba}
  {$I WaspLib/osr.simba}
{$ENDIF}

{$IFNDEF WL_GROUPING_INCLUDED}
  {$I WaspLib/optional/interfaces/gametabs/grouping.simba}
{$ENDIF}
{$include_once ../Scripts/Accs_Scripts/RemiLib.simba}

type
  ESeed = (GOLOVANOVA, BOLOGANO, LOGAVANO);

var
  CurrentSeed: ESeed := ESeed.GOLOVANOVA;
  SeedAmount: Int64 := Random (400, 1100);

const
  BuyBoxes = False;
  UpgradeSeedBasedOnLevel = True;
  WateringCans := 20;
  PlanterArray5: TPointArray := [[2635, 2405], [2634, 2418], [2633, 2432], [2634, 2444], [2637, 2466], [2636, 2478], [2636, 2491], [2635, 2503], [2657, 2504], [2657, 2489], [2657, 2478], [2657, 2468], [2657, 2442], [2656, 2432], [2658, 2419], [2658, 2406]];
  WalkArray5: TPointArray := [[2645, 2407], [2644, 2420], [2644, 2433], [2645, 2444], [2645, 2468], [2645, 2480], [2645, 2492], [2644, 2503], [2647, 2506], [2648, 2493], [2647, 2480], [2648, 2468], [2647, 2444], [2648, 2432], [2648, 2421], [2647, 2408]];
  //PlanterArray5: TPointArray := [[2635, 2405], [2634, 2418], [2633, 2432], [2634, 2444], [2637, 2466], [2636, 2478], [2636, 2491], [2635, 2503], [2657, 2504], [2657, 2489], [2657, 2478], [2657, 2468], [2657, 2442], [2656, 2432]];
  //WalkArray5: TPointArray := [[2645, 2407], [2644, 2420], [2644, 2433], [2645, 2444], [2645, 2468], [2645, 2480], [2645, 2492], [2644, 2503], [2647, 2506], [2648, 2493], [2647, 2480], [2648, 2468], [2647, 2444], [2648, 2432]];

type
  EFarmerState = (WAIT_STATE, GET_SEEDS, WAIT_SKIP_STATE, WALK_SPOT, PLANT_SEED, WATER_SEED, CLEAR_SEED, HARVEST_SEED, GET_WATER, GAMEFINISHED, GAMESTART, LEVEL_UP, CLOSE_CONTEXT, END_SCRIPT, CANCEL_USE, MOUSE_MISSED_PATCH, OPEN_BOX, OPEN_CHAT, CHANGE_CHAT_FILTER);
  TTitheFarmer = record
    State: EFarmerState;
    Patches, WalkLocations, FarmerGricoller: TRSObject;
    walkSpot, WithdrawFails, TCharges, TotalActions: Int32;
    RSW : TRSWalker;
    ShutdownTime: Int64;

    PlanterArray, WalkArray, nonModifiedPlanterArray, tpa: TPointArray;
    SeedItem: TRSItem;
    BoxCol: TCTS2Color;
    SpecialCanEmpty, SeedPlanted, Refilled, seedBlocker: Boolean;
  end;


procedure TTitheFarmer.SetupAntiban();
begin
  Antiban.Skills := [ERSSkill.FARMING];
  Antiban.MinZoom := 20;
  Antiban.MaxZoom := 25;

  Antiban.AddTask(ONE_SECOND*45, @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE*7,  @Antiban.DoMidLoseFocus);
  Antiban.AddTask(ONE_MINUTE*9,  @Antiban.DoShortLoseFocus);
  Antiban.AddTask(ONE_MINUTE*25, @Antiban.HoverSkills);
end;

procedure TTitheFarmer.SetupObjects();
begin
  //patches.Setup();
  Patches.UpText := [];
  Patches.Finder.Colors += CTS2(3035994, 11, 0.05, 0.19);
  Patches.Setup(4, PlanterArray);
  SeedItem := Self.GetSeedString();
  walkSpot := 0;
  Self.SeedPlanted := False;
  Self.Refilled := False;
  RSObjects.TitheWaterBarrels.Setup(['> Water B']);
end;

procedure TTitheFarmer.Init(maxTime: UInt64);
var
  mypos_ : Tpoint;
  Inventory_ : TRSBankItemArray;
  inventoryitems: TRSItemArray;
  i, j, World: Int32;
  inSplashingWorld : Boolean;
  a : TPointArray;
  TPA : TPointArray;
  WorldList : TIntegerArray;
  T: TCountDown;
begin
  Self.RSW.SetupRegions([RSRegions.TITHE_FARM, RSRegions.CASTLE_WARS], 12);
  //patches.Setup();
  Self.SetupObjects();

  Mouse.Speed      := 14 + Antiban.GetBehavior(EBioBehavior.MOUSE_SPEED);
  Mouse.Gravity    := 8  + Round(Antiban.GetBehavior(EBioBehavior.MOUSE_GRAVITY) / 2);
  Mouse.Wind       := 3  + Round(Antiban.GetBehavior(EBioBehavior.MOUSE_WIND) / 2);
  Mouse.MissChance := 11 + Antiban.GetBehavior(EBioBehavior.MOUSE_MISS);
  Mouse.CanIdle    := True;

  Self.SetupAntiban;

  if (not RSClient.IsLoggedIn) then
    Login.LoginPlayer();


//INVENTORY
  //SETUP BANK/INVENTORY + ADD REGIONS
  repeat
  begin
    if Bank.Open(ERSBankLocation.CASTLE_WARS) then
    begin
      Inventory_ += TRSBankItem.Setup('Watering can(8)', 20, False);
      Inventory_[0].Tab := 7; Inventory_[0].Scroll := 0;
      Inventory_ += TRSBankItem.Setup('Seed dibber', 1, False);
      Inventory_[1].Tab := 7; Inventory_[1].Scroll := 0;
      Inventory_ += TRSBankItem.Setup('Spade', 1, False);
      Inventory_[2].Tab := 7; Inventory_[2].Scroll := 0;
      Inventory_ += TRSBankItem.Setup('Ring of dueling(1)', 1, False);
      Inventory_[3].Tab := 0; Inventory_[3].Scroll := 0;

      inventoryitems += 'Watering can(8)';
      inventoryitems += 'Seed dibber';
      inventoryitems += 'Spade';

      for i := 0 to High(Inventory_) do
      begin
        Bank.WithdrawItem(Inventory_[i], True);
        Wait(0, 72);
      end;
    end else
    begin
      Self.RSW.webwalk([5166, 4115]);
    end;
  end;
  Until Inventory.count >= 1;

  while Bank.IsOpen() do
    Bank.Close();

  while not Inventory.IsOpen() do
    Inventory.Open();

  for i := 0 to High(Inventory_) do
  begin
    if not inventoryitems.Contains(Inventory_[i].Item) then
    begin
      Inventory.ClickItem(Inventory_[i].Item);
      Wait(0, 72);
    end;
  end;
  wait(200, 560);

//TRAVEL
  While RSRegions.CASTLE_WARS.Contains(Self.rsw.GetMyPos) do
  begin
    if Grouping.TeleportToActivity("tithe farm") then
    begin
      waituntil(rsregions.TITHE_FARM.Contains(Self.rsw.GetMyPos), 200, 17000);
    end else
    begin
      writeln('Selecting teleport failed');
    end;
  end;
  writeln('Teleported');

  PlanterArray := PlanterArray5;
  WalkArray := WalkArray5;
  nonModifiedPlanterArray := PlanterArray;
  Options.Open;

  if Options.GetBrightnessLevel < 100 then
    Options.SetMaxBrightness;
  if (not InRange(Options.GetZoomLevel, 20, 30)) then
    Options.SetZoomLevel(SRL.TruncatedGauss(20, 25));

  FarmerGricoller.Setup(3, [[2588, 2468]]);
  FarmerGricoller.Setup(['Talk-to Farmer Gricoller']);
  FarmerGricoller.Finder.Colors += CTS2(6255725, 4, 0.17, 0.22);

  XPBar.EarnedXP();

  Self.ShutdownTime:= GetTimeRunning + maxTime;
end;

function TTitheFarmer.IsLastStep(): Boolean;
begin
  Result := ((Self.walkSpot) = (High(PlanterArray)));
end;

function TTitheFarmer.GetSeedString(): String;
begin
  case CurrentSeed of
    ESeed.BOLOGANO: Result := 'Bologano seed';
    ESeed.GOLOVANOVA: Result := 'Golovanova seed';
    ESeed.LOGAVANO: Result := 'Logavano seed';
  end;
end;

// PlantSeed increased efficiency by Gimpy666
function TTitheFarmer.PlantSeed(): Boolean;
var
  SeedCount: Int32;
  Cuboid: TCuboidEx;
begin
  if not RSClient.IsLoggedIn then
    exit;

  SeedCount := Inventory.CountItemStack(Self.GetSeedString());
  if (SeedCount = 0) then
  begin
    Self.ProgressStep();
    Exit;
  end;

  if not Inventory.SetSelectedItem(Self.GetSeedString()) then
  begin

    inventory.ClickItem('Spade');
    Exit;
  end;

  Cuboid := RSW.GetCuboidMS(PlanterArray[Self.walkSpot], [1, 1, 0]);
  // check for correct uptext before planting
  Mouse.Move(Cuboid.Center);

  if not Mainscreen.IsUpText(['Tithe']) then
    ChooseOption.Select('Tithe')
  else
    Mouse.Click(MOUSE_LEFT);

  Result := WaitUntil(Inventory.CountItemStack(Self.GetSeedString()) <> SeedCount, 50, 6000);
  Self.SeedPlanted := True;
  Cuboid := RSW.GetCuboidMS(PlanterArray[Self.walkSpot], [1, 1, 0]);
  Mouse.Move(Cuboid.Center);

  if not WaitUntil(Mainscreen.IsUpText(['Water']), 10, 3000) then
    exit;

  Mouse.Click(MOUSE_LEFT);
  WaitUntil(not (MainScreen.IsUpText(['Water'])), 10, 1500);
  if Self.IsLastStep() then
  begin
    Self.ProgressStep();
    self.seedBlocker := true;
  end
  else
    Self.ProgressStep();

end;

function TRSWalkerObject._UpTextCheck(out shouldExit: Boolean): Boolean; override;
var
  upText: String;
begin
  shouldExit := True;
  if (MainScreen.Mode = ERSClientMode.FIXED) and MainScreen.HasInterface() then
    Exit;

  upText := MainScreen.GetUpText();

  if Self.Filter.UpText and (Self.UpText in upText) then
    Exit(True);
  shouldExit := False;
end;

function TTitheFarmer.GetWater(): Boolean;
var
  Slot: Int32;
begin
  if not RSClient.IsLoggedIn then
    exit;

  if Inventory.FindItem('Watering can', Slot) then
  begin
    Inventory.SetSelectedSlot(Slot);
    if RSObjects.TitheWaterBarrels.Click then
      Result := WaitUntil(Inventory.CountItem('Watering can') = 0, 2000, 60000);
  end
  else if Inventory.FindItem('Gricoller' 's Can', Slot) then
  begin
    Inventory.SetSelectedSlot(Slot);
    if RSObjects.TitheWaterBarrels.Click then
      WaitUntil(Minimap.IsPlayerMoving = False, 2000, 60000);
    Wait(2000, 4000);
    Result := True;
  end;

  Wait(800, 1200);
  if not Result then
    Exit;

  PlanterArray := nonModifiedPlanterArray;
end;

function TTitheFarmer.ClearSeed(Harvest: Boolean = False): Boolean;
var
  Slot: Int32;
  StartXP: Int32 := XPBar.Read ();
begin
  if not RSClient.IsLoggedIn then
    exit;

  Mouse.Click(MOUSE_LEFT);
  if Harvest then
  begin
    if Result := WaitUntil(XPBar.EarnedXP(), 100, 5000) then
      TotalActions += 1;
  end
  else
  begin
    Wait(1900, 2000);
    Result := True;
  end;

  if Self.IsLastStep() then
  begin
    Self.ProgressStep();
    self.seedBlocker := false;
    self.SeedPlanted := false;
  end
  else
    Self.ProgressStep();
end;

function TTitheFarmer.InFarm(): Boolean;
var
  PointsBox: TBox = [414, 50, 513, 103];
  ocrFilter: TOCRColorFilter;
  RecognizedText: TStringArray;
  TextBounds: TBoxArray;
begin
  ocrFilter := TOCRColorFilter.Create([2070783], [1]);
  RecognizedText := OCR.RecognizeLines(PointsBox, ocrFilter, RS_FONT_PLAIN_12, TextBounds);

  if recognizedText <> [] then
  begin
    result := true;
  end;
end;

function TTitheFarmer.GetSeeds(): Boolean;
begin
  if not RSClient.IsLoggedIn then
    exit;

  if not RSObjects.TitheTable.WalkClick() then
    Exit;
  Minimap.WaitMoving();
  if (UpgradeSeedBasedOnLevel) then
    case Stats.GetLevel(ERSSkill.FARMING) of
      00 .. 33: TerminateScript('You need at least level 34 farming!');
      34 .. 53: CurrentSeed := ESeed.GOLOVANOVA;
      54 .. 73: CurrentSeed := ESeed.BOLOGANO;
      else
        CurrentSeed := ESeed.LOGAVANO;
    end;
  if WaitUntil(Chat.ClickOption(Self.GetSeedString()), 200, 4000) then
    Chat.AnswerQuery('How many', ToStr(SeedAmount), 2000, 100);

  Result := WaitUntil(Inventory.ContainsItem(Self.GetSeedString()), 200, 4000);
  if Result then
  begin
    Self.WithdrawFails := 0
  end
  else
    Self.WithdrawFails += 1;
  if Self.WithdrawFails > 2 then
    writeln('We failed to withdraw seeds 3 times.');
end;

function TTitheFarmer.ProgressStep(): Boolean;
begin
  if not RSClient.IsLoggedIn then
    exit;

  if Self.IsLastStep() then
  begin
    Self.walkSpot := 0;
  end
  else
  begin
    Self.walkSpot += 1;
  end;
  Result := True;
end;

function TTitheFarmer.WaitForSpot(Destination: TPoint): Boolean;
begin
  if not RSClient.IsLoggedIn then
    exit;

  if (not (RSW.AtTile(Destination, 5))) then
  begin
    result := WaitUntil(RSW.AtTile(Destination, 5), 50, 5000);
  end
  else
  begin
    result := True;
  end;
end;

function TTitheFarmer.PatchWet(point: TPoint): Boolean
var
  B: TBox;
  TPA: TPointArray;
begin
  if not RSClient.IsLoggedIn then
    exit;

  B := Box(point, 15, 15);
  TPA := B.ToRectangle.ToTPA;
  TPA.Fill;
  TPA := Mainscreen.Filter(TPA);
  Result := SRL.CountColor(CTS2(6125951, 2, 0.10, 1.59), TPA.Bounds) >= 1;
end;

function TTitheFarmer.WalkToSpotlonger(Destination: TPoint): Boolean;
begin
  if not RSClient.IsLoggedIn then
    exit;

  if (not (RSW.AtTile(Destination, 20))) then
  begin
    RSW.WebWalk(Destination);
    result := WaitUntil(RSW.AtTile(Destination, 20), 5, 5000);
  end
  else
  begin
    result := True;
  end;
end;

function TTitheFarmer.checkPlant(Cuboid: TCuboidEx): Boolean;
var
  CurrentPatch: TCuboidEx;
begin

  if not RSClient.IsLoggedIn then
    exit;

  if (Self.GetSeedString() = 'Bologano seed') then
  begin
    Result := SRL.CountColor(CTS2(6925129, 32, 0.50, 0.76), Cuboid.Bounds) >= 1
  end
  else if (Self.GetSeedString() = 'Golovanova seed') then
  begin
    Result := SRL.CountColor(CTS2(6134741, 18, 0.32, 1.60), Cuboid.Bounds) >= 1
  end
  else if (Self.GetSeedString() = 'Logavano seed') then
  begin
    Result := SRL.CountColor(CTS2(10563493, 34, 0.08, 1.34), Cuboid.Bounds) >= 1
  end
  else
  begin
    Result := False;
  end;
end;

procedure TTitheFarmer.FindFarmer();
begin
  if not RSClient.IsLoggedIn then
    Exit;

  WriteLn('Finding Farmer Gricoller');
  FarmerGricoller.WalkSelectOption(['Rewards']);
  Waituntil(Mainscreen.HasInterface, 315, 10000);

  If not Mainscreen.HasInterface then
    Exit;
end;

procedure TTitheFarmer.Spendpoints();
var
  BoxCol := CTS2(938247, 10, 0.19, 1.77);
  TPA: TPointArray;
begin
  if not RSClient.IsLoggedIn then
    exit;

  If not mainscreen.HasInterface then
    Exit;

  if SRL.FindColors(TPA, BoxCol, Mainscreen.Bounds) then
  begin
    WriteLn('Buying Herb boxes');
    Mouse.move(TPA);

    if MainScreen.IsUpText(' Herb box') then
    begin
      Mouse.Click(MOUSE_RIGHT);
      WaitUntil(ChooseOption.IsOpen(), 315, 10000);
      ChooseOption.select('Buy-50');
    end;

  MainScreen.CloseInterface();
  WaitUntil(not Mainscreen.HasInterface, 315, 10000);
  end;
end;

procedure TTitheFarmer.HandlePrize();
begin
  if Inventory.ContainsItem('Herb box') then
  begin
    Inventory.ClickItem('Herb box', 'Bank-all');
    WaitUntil(not Inventory.ContainsItem('Herb box'), 5000, 30000);
  end;
end;

function TTitheFarmer.WaterSeed(): Boolean;
var
  CurrentPatch: TCuboidEx;
begin
  if not RSClient.IsLoggedIn then
    exit;

  if not (MainScreen.IsUpText(['Water'], 50)) and not(MainScreen.IsUpText(["Wat'r"], 50) and not(MainScreen.IsUpText(['W"ter'], 50)) )then
    Exit;

  Mouse.Click(MOUSE_LEFT);
  if not(RSW.AtTile(Planterarray[Self.walkSpot],10)) then
  begin
   waituntil(RSW.AtTile(Planterarray[Self.walkSpot],10), 100, 2000);
  end;

  minimap.WaitMoving();
  wait(1000);            // We do not need to wait 1.5s here, half of that is enough
  self.ProgressStep();
end;


function TTitheFarmer.Skip(): Boolean;
begin
   if not RSClient.IsLoggedIn then
    exit;

   if(mainscreen.IsUpText('Walk here / 1 more options') or mainscreen.IsUpText('Walkhere / 1 more options')) then
   begin
      if Self.IsLastStep() then
      begin
        Self.ProgressStep();
        writeln("going to reset this sheit1");
        self.seedBlocker := false;
        self.SeedPlanted := false;
      end
      else
        Self.ProgressStep();
   end;
end;

function TTitheFarmer.HandleBox():Boolean;
begin
  Self.FindFarmer();
  Self.Spendpoints();
end;

function TTitheFarmer.RestartGame(): Boolean;
begin
  if not RSClient.IsLoggedIn then
    exit;

  if not(Self.InFarm) then
  begin
    if BuyBoxes then
      Self.HandleBox();


    if not RSObjects.TitheDoor.WalkClick() then
      Exit;
  end;
  Minimap.WaitMoving();
  Result := WaitUntil(Self.InFarm(), 100, 10000);
  if Result then
  begin
    Self.walkSpot := 0;
    PlanterArray := nonModifiedPlanterArray;
    Self.GetWater();
  end;
end;

function TTitheFarmer.EndGame(): Boolean;
begin
   if not RSClient.IsLoggedIn then
    exit;
  if Inventory.ContainsItem(Self.GetSeedString()) then
  begin
    inventory.ShiftDrop([Self.GetSeedString()], DROP_PATTERN_SNAKE);
    wait(1000, 1100);
    Keyboard.PressKey(VK_1);
    wait(10);
  end;

  repeat
    if Inventory.ContainsAny(['Bologano fruit', 'Golovanova fruit', 'Logavano fruit']) then
      RSObjects.TitheSacks.Walkclick();
    WaitUntil(XPBar.EarnedXP(), 100, 5000);
    Minimap.WaitMoving();
  until Inventory.ContainsAny(['Bologano fruit', 'Golovanova fruit', 'Logavano fruit']) = False;

  if not RSObjects.TitheDoor.WalkClick() then
    Exit;
  Result := WaitUntil(not(self.InFarm), 600, 10000);
end;

// Significant contribution by Gimpy666
function TTitheFarmer.GetState(): EFarmerState;
var
  me: TPoint;
  upText, tmp, Msg: String;
  MSPnt: TPoint;
  CurrentPatch: TCuboidEx;
  hasEnoughWater: Boolean;
  Charges: Int32;
  slot: Int32;
  UptextBug: Int32;
begin

  if Chat.LeveledUp() then
    Exit(EFarmerState.LEVEL_UP);

  if Inventory.ContainsItem('Herb box') then
    Exit(EFarmerState.OPEN_BOX);

  if not(Self.InFarm()) and not Inventory.ContainsItem(Self.GetSeedString()) then
  begin
    writeln(self.InFarm());
    Exit(EFarmerState.GET_SEEDS);
  end;

  if not(Self.InFarm()) and Inventory.ContainsItem(Self.GetSeedString()) then
  begin
    Exit(EFarmerState.GAMESTART);
  end;

  if inventory.GetSelectedSlot() >= 0 then
  begin
      inventory.ClickItem('spade');
  end;

  if inventory.Open() and (
    not (
        Inventory.ContainsAny(['Bologano seed', 'Golovanova seed', 'Logavano seed'])
    ) or (
        (
            (Inventory.CountItemStack('Bologano seed') < 16) and
            (Inventory.CountItemStack('Golovanova seed') < 16) and
            (Inventory.CountItemStack('Logavano seed') < 16)
        ) and not (Self.seedBlocker) and not (self.SeedPlanted)
      )
    ) then
  begin
    writeln(Inventory.ContainsAny(['Bologano seed', 'Golovanova seed', 'Logavano seed']));
    writeln(Inventory.CountItemStack('Bologano seed'));
    writeln(Inventory.CountItemStack('Golovanova seed'));
    writeln(Inventory.CountItemStack('Logavano seed'));
    if (Inventory.CountItemStack('Logavano seed') = -1) then
    begin
      writeln( 'inv-empty' + DIRECTORYSEPARATOR + 'inv-empty');
      SaveScreenshot('inv-empty' + DIRECTORYSEPARATOR + 'inv-empty', true);
      terminatescript('send me this img');
    end;

    if (Inventory.CountItemStack('Bologano seed') = -1) then
    begin
      writeln( 'inv-empty' + DIRECTORYSEPARATOR + 'inv-empty');
      SaveScreenshot('inv-empty' + DIRECTORYSEPARATOR + 'inv-empty', true);
      terminatescript('send me this img');
    end;

    if (Inventory.CountItemStack('Golovanova seed') = -1) then
    begin
      writeln( 'inv-empty' + DIRECTORYSEPARATOR + 'inv-empty');
      SaveScreenshot('inv-empty' + DIRECTORYSEPARATOR + 'inv-empty', true);
      terminatescript('send me this img');
    end;

    Exit(EFarmerState.GAMEFINISHED);
  end;


  if InRange(Chat.GetScrollPosition, 1, 99) then
    Chat.SetScrollPosition(100);


  if 'charges remaining' in Chat.GetMessage(7, [CHAT_COLOR_BLACK]) then
  begin
    self.SpecialCanEmpty := true;
    Msg := Chat.GetMessage(7, [CHAT_COLOR_BLACK]);
    self.TCharges := StrToInt(ExtractFromStr(Msg, Numbers));
  end;

  if(self.SpecialCanEmpty) and not (self.seedBlocker) and not (self.SeedPlanted) then
  begin
    if self.TCharges <= 100 then
    begin

      self.SpecialCanEmpty := False;
      Self.TCharges := 0;

      if (not Self.Refilled) then
        Self.GetWater();
      Self.Refilled := True;
      Exit(EFarmerState.GET_WATER);
    end
    else if self.TCharges > 100 then
      Self.Refilled := False;
  end;

  if ChatButtons.GetState(ERSChatButton.GAME_CHAT) <> ERSChatButtonState.ENABLED then
    Exit(EFarmerState.CHANGE_CHAT_FILTER);

  if not ChatButtons.IsActive(ERSChatButton.ALL_CHAT) then
    Exit(EFarmerState.OPEN_CHAT);

  hasEnoughWater := (Inventory.CountItem('Watering can') >= (WateringCans * 0.6));
  if (WateringCans >= 1) and hasEnoughWater and not (self.seedBlocker) and not (self.SeedPlanted) then
  begin
    Exit(EFarmerState.GET_WATER);
  end;

  self.WalkToSpotlonger(WalkArray[Self.walkSpot]);
  CurrentPatch := RSW.GetCuboidMS(PlanterArray[Self.walkSpot], [0.5, 0.5, 0], [0, 0]);


  Mouse.Move(CurrentPatch.ShapeFill(), true);
  repeat
    tmp := MainScreen.GetUpText();
    Wait(20, 50);
    upText := MainScreen.GetUpText();
  until tmp = upText;

  while (uptext.ContainsAny(["Walk he' e"]) or uptext.ContainsAny(['Walkrhere']) or uptext.ContainsAny(['Walkhere']) or uptext.ContainsAny(["Wat'r"]) or  uptext.ContainsAny(['W"ter'])) do
  begin
    antiban.RandomRotate();
    Mouse.Move(CurrentPatch.ShapeFill(), true);
    repeat
      tmp := MainScreen.GetUpText();
      Wait(20, 50);
      upText := MainScreen.GetUpText();
    until tmp = upText;

  end;

  if upText.ContainsAny(['Clear']) then
    Exit(EFarmerState.CLEAR_SEED);

  if not checkPlant(CurrentPatch) and not (self.seedBlocker) then
  begin
    Exit(EFarmerState.PLANT_SEED);
  end;



  if upText.ContainsAny(['Use', '>']) then
    Exit(EFarmerState.CANCEL_USE);

  if (upText.ContainsAny(['Walk here']) or uptext.ContainsAny(['Walkrhere']) or uptext.ContainsAny(['Walkhere'])) and checkPlant(CurrentPatch) then
    Exit(EFarmerState.WAIT_STATE);


  if upText.ContainsAny(['Water']) or uptext.ContainsAny(["Wat'r"]) or  uptext.ContainsAny(['W"ter']) then
    Exit(EFarmerState.WATER_SEED);

  if upText.ContainsAny(['Clear']) then
    Exit(EFarmerState.CLEAR_SEED);

  if upText.ContainsAny(['Harvest']) then
    Exit(EFarmerState.HARVEST_SEED);

  Exit(EFarmerState.MOUSE_MISSED_PATCH);
end;

procedure TTitheFarmer.Run();
var
 prevState: EFarmerState;
begin
  if self.InFarm() then
     Self.GetWater();

  repeat
    if not (self.SeedPlanted) then
    begin
      Antiban.DoAntiban(true, true);
    end
    else
    begin
      Antiban.DoAntiban(false, false);
    end;

    Self.State := Self.GetState();
    //if State <> prevState then
    Writeln('Doing: ', State);
    prevState := State;

    case State of
      EFArmerState.OPEN_CHAT: ChatButtons.Open(ERSChatButton.ALL_CHAT);
      EFarmerState.CHANGE_CHAT_FILTER: ChatButtons.ChangeState(ERSChatButton.ALL_CHAT, ERSChatButtonState.ENABLED);
      EFarmerState.WAIT_STATE: Wait(50, 100);
      EFarmerState.PLANT_SEED: Self.PlantSeed();
      EFarmerState.WATER_SEED: Self.WaterSeed();
      EFarmerState.CLEAR_SEED: Self.ClearSeed();
      EFarmerState.HARVEST_SEED: Self.ClearSeed(True);
      EFarmerState.GET_WATER: Self.GetWater();
      EFarmerState.GAMEFINISHED: Self.EndGame();
      EFarmerState.GAMESTART: Self.RestartGame();
      EFarmerState.OPEN_BOX: Self.HandlePrize();
      EFarmerState.GET_SEEDS: Self.GetSeeds();
      EFarmerState.LEVEL_UP: Chat.HandleLevelUp();
      //EFarmerState.END_SCRIPT: Break;
      EFarmerState.CANCEL_USE: ChooseOption.Select('Cancel');
      EFarmerState.MOUSE_MISSED_PATCH: self.Skip();
    end;

    Antiban.DoAntiban();       //Checks for due antiban
  until(GetTimeRunning > Self.ShutdownTime);
  Self.EndGame();   //Stops if MaxAtions or MaxTime have been reached.
end;

var
  TitheFarmer: TTitheFarmer;

procedure TTitheFarmer.ChainerRun(maxTime: UInt64);
begin
  writeln('STARTING TitheFarmer CHAINER RUN');

  Self.Init(maxTime);
  Self.Run();

  while not RSRegions.CASTLE_WARS.Contains(Self.RSW.getmypos()) do
  begin
    TeleportToCastleWars;
    if not WaitUntil(RSRegions.CASTLE_WARS.Contains(Self.RSW.getmypos()),300, 3000) then
    begin
      writeln('Failed teleporting to Castle Wars, retrying');
    end else
    begin
    writeln('Teleported to castle wars');
    end;
  end;

  while (Inventory.Count >= 1) do
  begin
    wait(1000, 3000);
    Self.RSW.webwalk([5166, 4115]);
    if Bank.open() then
    begin
      Bank.DepositAll();
      wait(200, 300);
      Mouse.click([467, 299, 493, 325], 1);
    end;

    Bank.Close();
  end;
  Antiban.Tasks := [];
  Antiban.Breaks := [];
  writeln('Tithe Farm CHAINER RUN DONE ----------');
end;

{$IFNDEF SCRIPT_CHAIN}
begin
  antiban.SetupBiometrics();
  TitheFarmer.ChainerRun(10* 60000);
end.
{$ENDIF}
